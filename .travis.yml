language: cpp
compiler:
    # FIXME: For now, building with Clang is disabled because the STP built with
    # it hits an assertion failure during some tests. We should sort this out
    # eventually and file the bug against STP or Clang whichever is appropriate,
    # but for now it is easier to just reduce the number of configs we test
    # anyway.
    # - clang

    - gcc
env:
    ###########################################################################
    # Configurations
    #
    # Each line in the "env" section represents a set of environment variables
    # passed to a build. Thus each line represents a different build
    # configuration.
    ###########################################################################

    # Check the matrix of:
    #   LLVM  : {2.9, 3.4}
    #   STP   : {r950, UPSTREAM}
    #   UCLIBC: {ENABLED, DISABLED}
    # with Asserts enabled.

    # COVERAGE set indicated that coverage data should be uplaoded to the server, only ONE job should have COVERAGE set

    # FIXME: Enable when we want to test LLVM3.5
    matrix:
    #- LLVM_VERSION=3.5 STP_VERSION=UPSTREAM KLEE_UCLIBC=0 DISABLE_ASSERTIONS=0 ENABLE_OPTIMIZED=1
    #- LLVM_VERSION=3.5 STP_VERSION=UPSTREAM KLEE_UCLIBC=1 DISABLE_ASSERTIONS=0 ENABLE_OPTIMIZED=1
    - LLVM_VERSION=3.4 STP_VERSION=UPSTREAM KLEE_UCLIBC=0 DISABLE_ASSERTIONS=0 ENABLE_OPTIMIZED=1 COVERAGE=1
    - LLVM_VERSION=3.4 STP_VERSION=UPSTREAM KLEE_UCLIBC=1 DISABLE_ASSERTIONS=0 ENABLE_OPTIMIZED=1 COVERAGE=0
    - LLVM_VERSION=2.9 STP_VERSION=UPSTREAM KLEE_UCLIBC=0 DISABLE_ASSERTIONS=0 ENABLE_OPTIMIZED=1 COVERAGE=0
    - LLVM_VERSION=2.9 STP_VERSION=UPSTREAM KLEE_UCLIBC=1 DISABLE_ASSERTIONS=0 ENABLE_OPTIMIZED=1 COVERAGE=0
    - LLVM_VERSION=3.4 STP_VERSION=r940 KLEE_UCLIBC=0 DISABLE_ASSERTIONS=0 ENABLE_OPTIMIZED=1 COVERAGE=0
    - LLVM_VERSION=3.4 STP_VERSION=r940 KLEE_UCLIBC=1 DISABLE_ASSERTIONS=0 ENABLE_OPTIMIZED=1 COVERAGE=0
    - LLVM_VERSION=2.9 STP_VERSION=r940 KLEE_UCLIBC=0 DISABLE_ASSERTIONS=0 ENABLE_OPTIMIZED=1 COVERAGE=0
    - LLVM_VERSION=2.9 STP_VERSION=r940 KLEE_UCLIBC=1 DISABLE_ASSERTIONS=0 ENABLE_OPTIMIZED=1 COVERAGE=0

    # Check at least one build with Asserts disabled.
    - LLVM_VERSION=2.9 STP_VERSION=r940 KLEE_UCLIBC=1 DISABLE_ASSERTIONS=1 ENABLE_OPTIMIZED=1 COVERAGE=0

    # Check at least one Debug+Asserts build
    - LLVM_VERSION=3.4 STP_VERSION=UPSTREAM KLEE_UCLIBC=1 DISABLE_ASSERTIONS=0 ENABLE_OPTIMIZED=0 COVERAGE=0
    global:
    - secure: I2KHdohEIIBFHv8WuBPNP6Tr/KlF2bZsJaErSjyQgL6m0oNGI/f0AzTD+8lwlxhYSdk8Zq0+4R8uqKi9Hx70gN/Jxh2vpO+cStysP7IEpuUGojRleU5yxw0G8hDd8qvgqR23ZRBriIRQp+5h1AR/7cW1FJ62u5M5kbZMEJXe4wChSrERt6hhOY3aWvBaoJEfyUsKMPrtPVkTtnsbO/rdlaIJ8I7Eh0tGiI5aHzziVyA56CjEnDszEbbtTky0AIzPOUzL5rjsUNgEGkDk4KvyfGf8Fe8bd2Uucm1Bdx5l6Q2vF8ugwhClwF0kZCnBuZ8iY1f8fO8JAd91cRf5D4Yp+UYV7+xKRD3qEGerXz2riWWpJFTtcK8Jp4ZiPmguRqx5pSMjn8tM9u4I0a+QsttynX7juMgn4Hd7HmXXzDnUPCbbXOqUxH8E6hRyJsK9t1n2db8fiBZ82nAQI5Iia0bSS5Ugv3y8rmT8QunFmKe0E+VhN6BmNE/xp+dEYKkNJw9Q6z2HxzLcMmSDxYMSINXIHMahfh7hkL+4o2oM/8EN8+D5k+bWhes9qPqFQvG2EgeaObXwG0rgdnwMKqXwcVtM3rj1r9hkXyOiRIOpo9t2B82EBgBs8Wkn+a36jKl2ol7KO9BqKRr9VDBTNugyDT9Gb/s/p1DncfNrRRdHbtH6BV4=
    - secure: YTSCtmz2/1vaaM9Y/9sVuCSTCXW4zvstIGqcFRVI1lgcgOhsGPJ85NYylCL4p1yohkLgIpKKddsSNaY4S1iL9Dnpq02shD1I+Uuqa73+srlTCkPWrJjMyqXQd9lHGx2RI3POomrVZAn6zyowoCQh0DrNEf+CyKpysfnj9LujFjofrCFKBxOrWGaIVbV3Gb85Y7jsW/a3mBV4KyETzMqhh5K1YwRbvCOcmBdx+nAVZDzGQPd7AW49ExZeu9OJDDhhPkPPgt6zK4ynEmdKeoLMu9mlUDz++Z7HwQbkEGN+AYPjPde5vjQX9GM/0amVHjQsph4M80QnR5XsFUDPaaoj/K1vAQ3vKUs4UUeMN8XIuLP3psX4kPkK3B7aTZaoEsEA+6GdgGtCv5s4n/OMb29eBNaBZPp6NpeTPilmYEdI0vAB4BH0gRbmYqxqsyF0KyWvUYUiGWwt2jVreqZpJNX79fNoykT+kYoo+iW3otBGC9uTew4VgBK6tk1nOycfrEBzz0lU44ov/VIMikXYCT3D9dYgemdwqvmzi2YV5xQWPJRDIt96oTBEYg7GIInTERQKqLDAjhZX8QdRj0/3Gkfe3HbB3JDAPYKl2Oc58mD37hURk7onJsdtVUfgiF2uLx7uQ3qr7ji668FKMRKknQ4qox1QBN7dypXbADIhENh6bFo=
    - secure: ZfcC3mJaJooj3JkNKGTbTjiThidtexAuBOZ5NBu9x2+Nq8zX/rEbzYTmTlfj57UsZj27aQXgI9tCgLshodSgKF90Y+kLf5I3p2o6xIXxwzvClmFLiG5+Jxfdod2IJ4xQpwoj9lGzC+7+iPkfqnwdYKPNWdcOFPYZ4fMmvD6MqP9P+7njEGtE0XTfflmlEPySs471hlXGTFGea5EDSYcY2zrkycKh+PfXmT9u4f46bEqyQP4bAffsZy4WrrrFrNEkQGZsO3xdSLZs6MsmlG++HAIq3IqSHG2/IsB0XYC1nqZGxkCSIHCqdqY1MmaaNhYpS4dWhhQNabsAd1Nnvo/i2gsu+Ll4E6WuGI4WN9ha5Y8rJZ06Oo/qjqVLE3r0L4bM4M5o4qYPdNyIuDRDW1gyMZN1AGO6ArdYoyPYhIQDRcYLtZt0qaM7hNjZ5iolSDXVk1OF/pjL+vNqiiPWb1EHxE/IRygeDca58EjSVJIr4LW+QwfjakRZtFqyqzrM8uAW0AfEQMOKdGA7YhRXNCg4/hkZMuAvO4daea5Xh8nbht2RQQ9r2hLfHbIgd4030aQnfk0HueNi3LVPkZDBmLM4OY/MOACZDFZQ1JLv+dg8wAblJ5NnLbLUg4pfEgCbZQICPW5j5xUqLqFFhwE4TYaTOjGsy+LkMdK0EasyPUwZhhs=

cache: apt
before_install:
    ###########################################################################
    # Set up the locations to get various packages from
    # We assume the Travis image uses Ubuntu 12.04 LTS
    ###########################################################################
    - sudo sh -c 'echo "deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.4 main" >> /etc/apt/sources.list.d/llvm.list'
    - sudo sh -c 'echo "deb-src http://llvm.org/apt/precise/ llvm-toolchain-precise-3.4 main" >> /etc/apt/sources.list.d/llvm.list'
    - sudo sh -c 'echo "deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.5 main" >> /etc/apt/sources.list.d/llvm.list'
    - sudo sh -c 'echo "deb-src http://llvm.org/apt/precise/ llvm-toolchain-precise-3.5 main" >> /etc/apt/sources.list.d/llvm.list'
    # Needed for CMake
    - sudo add-apt-repository -y ppa:ubuntu-sdk-team/ppa
    # Needed for new libstdc++ and gcc4.8
    - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test/
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key|sudo apt-key add -
    - sudo apt-get update
    ###########################################################################
    # Set up out of source build directory
    ###########################################################################
    - export KLEE_SRC=`pwd`
    - cd ../
    - mkdir build
    - cd build/
    - export BUILD_DIR=`pwd`
    ###########################################################################
    # Install stuff
    ###########################################################################
    - sudo apt-get install gcc-4.8 g++-4.8 libcap-dev cmake
    # Make gcc4.8 the default gcc version
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 20
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 20
    # Make Clang3.4 the default clang version
    - sudo apt-get install clang-3.4
    - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-3.4 20
    - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-3.4 20
    # Install LLVM and the LLVM bitcode compiler we require to build KLEE
    - ${KLEE_SRC}/.travis/install-llvm-and-runtime-compiler.sh
    # Install lit (llvm-lit is not available)
    - sudo pip install lit
    # Build STP
    - mkdir stp
    - cd stp
    - ${KLEE_SRC}/.travis/stp.sh
    - cd ../
script:
    # Get needed utlities/libraries for testing KLEE
    - mkdir test-utils/
    - cd test-utils/
    - ${KLEE_SRC}/.travis/testing-utils.sh
    - cd ../
    # Build KLEE
    - ${KLEE_SRC}/.travis/klee.sh
